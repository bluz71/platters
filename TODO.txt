- Generated comments: Faker::Hipster.paragraph

- cache comments, similar to Artists and Albums

- Trash can icon for comment deletion

- adding or deleting comment should touch associated Artist/Album so that cache
  is correctly expired.

- Comments should be infinite scroll like Twitter (use AJAX to get new set of
  comments)

- Enforce 5-second gap between comments for Users (column last_commented_at)

- Enforce 100 comments per day per user

- Comment posting SHOULD use invisible_captcha

- Update to Rails 5

- Change "most-recent" caching from 1 hour to 15 mins.

- Test user account deletion:
    - Removes user
    - Removes user comments
    - Updates timestamps for artist/album of association deleted comments

- Test:
    - Logged in users can add comments.
    - Anonymous users can NOT add comments.

- Gems:
    - Obscenity gem for profanity filtering.
        do as a background task

    - rack-attack, rate limiting
        http://www.kickstarter.com/backing-and-hacking/rack-attack-protection-from-abusive-clients
        http://blog.hayleyanderson.us/2015/06/05/using-and-testing-rack-attack-to-improve-the-security-of-your-rails-app/

    - newrelic_rpm, setup New Relic APM Lite account for production monitoring

- Loggly free account and logglier gem (Papertrails centralized logging
  alternative). Also use lograge gem:

    https://www.sitepoint.com/optimizing-ruby-logging-faster-debugging-problem-solving/
    https://www.loggly.com/docs/ruby-logs/
    https://www.loggly.com/docs/send-logs-heroku/
    http://blog.originate.com/blog/2013/07/09/deploying-rails-4-to-heroku/

- Rollbar error reporting? https://rollbar.com

- Code quality:
    - RuboCop gem for Ruby style guide enforcement
    - Reek gem for code smell detection
    - rails_best_practices
    
    See: https://eewang.github.io/blog/2014/01/18/how-to-smell-check-your-code-quality-in-ruby-and-rails/

- favicon

- DigitalOcean:
    - Setup with GoRails referral for $10 credit: https://www.digitalocean.com/?refcode=87fcb9dab7a3
    - Use Singapore region, it has best performance: http://speedtest-sgp1.digitalocean.com/
    - Setup a 2GB swap file.

- Use Mina for deployment.
    - http://nadarei.co/mina/
    - https://thewebprof.com/switching-from-capistrano-to-mina-for-rails-deployment/
    - https://www.digitalocean.com/community/tutorials/how-to-deploy-with-mina-getting-started

- Deployment:
    - make sure nginx is using Unix Domain Sockets when communicating with
      Puma, this will be much faster than using the default TCP option.
    - nginx rate limiting: limit_conn_zone
    - Tuning nginx: https://www.nginx.com/blog/tuning-nginx/
    - More nginx tips: http://thelazylog.com/useful-nginx-configurations-for-rails-app/
    - Deploying Rails application with Nginx, Puma and Mina: 
        http://thelazylog.com/deploying-rails-application-with-nginx-puma-and-mina/
    - Let's Encrypt SSL: https://scotthelme.co.uk/setting-up-le/

- Adding comments could be WebSocket'ized (ActionCable) to make it more live to
  viewers. Do this after upgrading to Rails 5 and deployment.
