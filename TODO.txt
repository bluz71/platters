- Refactor Album#track_list function.

- In Album form add a button for "+ Genre", this should launch a Bootstrap
  modal allowing the user to add in a new Genre. Do remote:true with smart
  update of Genre selector in Album form.
    
- Sidebar for Artists index page. Use responsive limits to not display it for
  small sizes. It should show the last five albums and eventually the last five
  comments.

- Create SpecialPages controller for Technologies, Sources and Home. Note, Home
  should be modelled on GoRails and Heroku home pages (use Jumbotron).

- Replace SQLite with Postgres
    - Then add "rack-mini-profiler" gem
    - Convert LIKE query to @@ (see Railscasts episode 343)

- Setup Fragment Cache, use in-memory store (for artists/albums and side-bar):
    - config.cache_store = :memory_store, { size: 64.megabytes }
    - http://guides.rubyonrails.org/caching_with_rails.html
    - http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching
    - https://devcenter.heroku.com/articles/caching-strategies#fragment-caching

- Image seeding. Pre-store files directly in Rackspace Cloud Storage and then
  reference them from seeds.rb. See these topics for hints:

    https://groups.google.com/forum/#!topic/carrierwave/csmI0twL_HY
    https://stackoverflow.com/questions/32365121/ror-how-to-seed-an-image-to-my-database-from-a-local-file

- User management, Clearance gem:
    - https://github.com/thoughtbot/clearance
  Clearance provides routing constraints that can be used to control access at
  the routing layer, please use this functionality to only provide admins
  access to Artist/Album add/edit & delete actions.

- Rate limit user creation, user login AND comment postings

- Gems:
    - Faker gem for seed comments (and test users):
        "An Ipsum Lorem paragraph. " << Faker::Lorem.paragraph
        Faker::Company.catch_phrase
        Faker::Company.bs.capitalize
        Faker::Hacker.say_something_smart
        Faker::Hipster.paragraph
        Faker::StarWars.quote

    - local_time gem for comment datestamps (see GoRails ep 31)

    - invisible_captcha gem for user registration (protect against bots)

    - Obscenity gem for profanity filtering.

    - Maildown gem for email views in Markdow format, this eliminates the need
      for separate HTML and TEXT views.

- Code quality:
    - RuboCop gem for Ruby style guide enforcement
    - Reek gem for code smell detection
    - rails_best_practices
    
    See: https://eewang.github.io/blog/2014/01/18/how-to-smell-check-your-code-quality-in-ruby-and-rails/

- Logo should use Capriola font: https://www.google.com/fonts/specimen/Capriola

- Use Mina for deployment.
    - http://nadarei.co/mina/
    - https://thewebprof.com/switching-from-capistrano-to-mina-for-rails-deployment/
    - https://www.digitalocean.com/community/tutorials/how-to-deploy-with-mina-getting-started

- Deployment:
    - make sure nginx is using Unix Domain Sockets when communicating with
      Puma, this will be much faster than using the default TCP option.
    - More nginx tips: http://thelazylog.com/useful-nginx-configurations-for-rails-app/
    - Deploying Rails application with Nginx, Puma and Mina: 
        http://thelazylog.com/deploying-rails-application-with-nginx-puma-and-mina/
