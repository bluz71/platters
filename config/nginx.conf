# nginx details at: 
#   http://vladigleba.com/blog/2014/03/27/deploying-rails-apps-part-4-configuring-nginx/
#   https://www.linode.com/docs/websites/nginx/how-to-configure-nginx

upstream app {
    server unix:///home/deploy/platters/tmp/sockets/puma.sock;
}

server {
    listen     80;
    listen [::]:80;

    # Redirect to HTTPS.
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen      443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name platters.cc;

    # Simple connection limits, poor man's DDOS protection.
    #
    # Please make sure the following two configurations are set in the http
    # block of /etc/nginx/nginx.conf:
    #
    #   limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:5m;
    #   limit_req_zone  $binary_remote_addr zone=req_limit_per_ip:5m rate=5r/s;
    limit_conn conn_limit_per_ip 10;
    limit_req zone=req_limit_per_ip burst=10;

    # Simple Geo restrictions. This application will only accept connections
    # from: Australia, New Zealand, USA and Canada.
    #
    # Geo-restrictions details:
    #   - https://www.digitalocean.com/community/questions/block-some-countries-from-visiting-my-website
    #   - https://www.howtoforge.com/nginx-how-to-block-visitors-by-country-with-the-geoip-module-debian-ubuntu
    #
    # Please make sure the following configuration is set in the http block of
    # /etc/nginx/nginx.conf (prior to any includes):
    #
    #   geoip_country /usr/share/GeoIP/GeoIP.dat;
    #   map $geoip_country_code $allowed_country {
    #       default no;
    #       AU yes;
    #       NZ yes;
    #       US yes;
    #       CA yes;
    #   }
    if ($allowed_country = no) {
        return 444;
    }

    # nginx SSL configuration details:
    #   - https://wiki.mozilla.org/Security/Server_Side_TLS
    #   - https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

    ssl_certificate     /etc/letsencrypt/live/platters.cc/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/platters.cc/privkey.pem;

    # SSL session settings.
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_session_timeout 1d;

    # Only support the newest protocols.
    ssl_protocols TLSv1.2 TLSv1.3;
    # Use the Mozilla "intermediate configuration" list from the first link
    # mentioned above along with TLS 1.3 ciphers.
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    # Disable TLS 1.3 0-RTT:
    #   https://blog.trailofbits.com/2019/03/25/what-application-developers-need-to-know-about-tls-early-data-0rtt/
    # Note, only supported by nginx 1.15.3 (or above).
    # ssl_early_data off;

    # Enable HSTS with max-age of six months.
    # Note, no need to set this if 'config.force_ssl' is enable in Rails
    # production (that setting will enable HSTS).
    # add_header Strict-Transport-Security "max-age=15768000; includeSubdomains";

    # Use custom Diffie-Hellman group to protect against the Logjam attack.
    ssl_dhparam /home/deploy/certs/dhparams.pem;

    root       /home/deploy/platters/public;
    access_log /home/deploy/platters/log/nginx.access.log;
    error_log  /home/deploy/platters/log/nginx.error.log info;

    location ^~ /assets/ {
        deny 156.238.0.0/16;
        deny 198.27.64.0/18;
        gzip_static on;
        expires 1y;
        add_header Cache-Control public;
    }

    location / {
        deny 156.238.0.0/16;
        deny 198.27.64.0/18;
        # Create public/offline.html when Platters is offline.
        try_files /offline.html $uri @app;
    }

    location @app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        # X-Forwarded-Proto is required for Devise/Clearance authentication
        # to work over HTTPS otherwise both will fail with 'Can't verify CSRF
        # token authenticity' errors. See this issue for more details:
        #   https://github.com/plataformatec/devise/issues/2734
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        proxy_pass http://app;
    }

    error_page 500 502 503 504 /500.html;
    client_max_body_size 10M;
    keepalive_timeout 10;
}
