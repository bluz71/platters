# nginx details at: 
#   http://vladigleba.com/blog/2014/03/27/deploying-rails-apps-part-4-configuring-nginx/
#   https://www.linode.com/docs/websites/nginx/how-to-configure-nginx

upstream app {
    server unix:///home/deploy/platters/tmp/sockets/puma.sock;
}

server {
    listen 80;
    server_name platters.site www.platters.site;

    root       /home/deploy/platters/public;
    access_log /home/deploy/platters/log/nginx.access.log;
    error_log  /home/deploy/platters/log/nginx.error.log info;

    location ^~ /assets/ {
        gzip_static on;
        expires 1y;
        add_header Cache-Control public;
    }

    location / {
        # Create public/offline.html when Platters is offline.
        try_files /offline.html $uri @app;
    }

    location @app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        proxy_pass http://app;
    }

    error_page 500 502 503 504 /500.html;
    client_max_body_size 10M;
    keepalive_timeout 10;
}

server {
    listen 443 ssl;
    server_name platters.site www.platters.site;

    # nginx SSL configuration details:
    #   - https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    #   - https://wiki.mozilla.org/Security/Server_Side_TLS

    ssl_certificate     /etc/letsencrypt/live/platters.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/platters.site/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    # This cipher list targets modern browsers, that means no support for: MD5,
    # RC4 and DES.
    #
    # Prefer AEAD ciphers over all other ciphers, those AEAD ciphers being:
    # AES-GCM and ChaCha20-Poly1305. TLS 1.3 will only support AEAD ciphers.
    #
    # For performance reasons (with no security loss):
    #  - prefer AES+GCM over ChaCha20 (most devices now accelerate AES vis AES-NI)
    #  - prefer ECDHE over DHE
    #  - prefer ECDSA over RSA
    #  - prefer AES128 over AES256
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-ECDSA-CHACHA20-POLY1305 ECDHE-RSA-CHACHA20-POLY1305 ECDHE-ECDSA-AES128-SHA256 ECDHE-RSA-AES128-SHA256 ECDHE-ECDSA-AES128-SHA ECDHE-RSA-AES128-SHA DHE-RSA-AES128-SHA";

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 180m;

    # Use custom Diffie-Hellman group to protect against the Logjam attack.
    ssl_dhparam /home/deploy/certs/dhparams.pem;

    root       /home/deploy/platters/public;
    access_log /home/deploy/platters/log/nginx.access.log;
    error_log  /home/deploy/platters/log/nginx.error.log info;

    location ^~ /assets/ {
        gzip_static on;
        expires 1y;
        add_header Cache-Control public;
    }

    location / {
        # Create public/offline.html when Platters is offline.
        try_files /offline.html $uri @app;
    }

    location @app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        proxy_pass http://app;
    }

    error_page 500 502 503 504 /500.html;
    client_max_body_size 10M;
    keepalive_timeout 10;
}
